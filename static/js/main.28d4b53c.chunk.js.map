{"version":3,"sources":["start1.js","App.js","index.js"],"names":["App2","React","useState","state","setstate","itemvalues","localStorage","getItem","JSON","parse","val","newValue","useEffect","setItem","stringify","className","src","height","alt","widht","type","placeholder","value","onChange","event","target","onClick","newitems","id","Date","getTime","toString","name","alert","map","curElem","updtaeditem","filter","edit","updtaeditems","deleting","data-sm-link-text","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMAgFeA,EA7EF,WACT,IADe,EASWC,IAAMC,SAAS,IAT1B,mBASRC,EATQ,KASDC,EATC,OAUMH,IAAMC,UATZ,WAEX,IAAMG,EAAWC,aAAaC,QAAQ,UACtC,OAAGF,EACQG,KAAKC,MAAMJ,GAEX,MAPA,mBAURK,EAVQ,KAUJC,EAVI,KAiDf,OAHAV,IAAMW,WAAU,WACZN,aAAaO,QAAQ,SAASL,KAAKM,UAAUJ,MAC9C,CAACA,IAEA,mCACI,qBAAKK,UAAU,SAAf,SACA,mCACI,qBAAKC,IAAI,0BAA0BC,OAAO,KAAKC,IAAI,OAAMC,MAAM,OAC/D,mBAAGJ,UAAU,OAAb,4CACA,uBAAOK,KAAK,OAAOC,YAAY,sBAAiBN,UAAU,MAAMO,MAAOnB,EAAOoB,SAAU,SAACC,GAAD,OAASpB,EAASoB,EAAMC,OAAOH,UACvH,uBAAOF,KAAK,QAAQJ,IAAI,oBAAoBC,OAAO,KAAKE,MAAM,KAAKJ,UAAU,QAAQW,QA5CpF,WAET,GAAIvB,EAEA,CACA,IAAMwB,EAAS,CACXC,IAAG,IAAIC,MAAOC,UAAUC,WACxBC,KAAK7B,GAETQ,EAAS,GAAD,mBAAKD,GAAL,CAASiB,KACjBvB,EAAS,SAPT6B,MAAM,0BAyCoGf,IAAI,QAC1G,uBACA,8BACKR,EAAIwB,KAAI,SAACC,GACN,OACI,gCACA,oBAAIpB,UAAU,UAAd,SAAyBoB,EAAQH,OACjC,uBAAOZ,KAAK,QAAQJ,IAAI,uBAAuBC,OAAO,KAAKE,MAAM,KAAKJ,UAAU,QAAQG,IAAI,OAAMQ,QAAS,kBA/BvH,SAACE,GAET,IAAMQ,EAAY1B,EAAI2B,QAAO,SAACF,GAG1B,OAFGA,EAAQP,KAAKA,GACZxB,EAAS+B,EAAQH,MACdG,EAAQP,KAAKA,KAExBjB,EAASyB,GAwB0HE,CAAKH,EAAQP,OAC5H,uBAAOR,KAAK,QAAQJ,IAAI,sBAAsBC,OAAO,KAAKE,MAAM,KAAKJ,UAAU,QAAQG,IAAI,aAAaQ,QAAS,kBAvCzH,SAACE,GAEb,IAAMW,EAAa7B,EAAI2B,QAAO,SAACF,GAC3B,OAAOA,EAAQP,KAAKA,KAExBjB,EAAS4B,GAkCgIC,CAASL,EAAQP,SAH5HO,EAAQP,SAS9B,wBAAQb,UAAU,SAAS0B,oBAAkB,aAAaf,QAAS,kBA1BpEf,EAAS,KA0BR,gCC5DD+B,EARH,WAER,OACI,8BACI,cAAC,EAAD,OCLZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.28d4b53c.chunk.js","sourcesContent":["import React from 'react'\r\nimport './style.css'\r\n\r\nconst App2 = () => {\r\n    const getdata =()=>\r\n    {\r\n        const itemvalues=localStorage.getItem(\"mylist\")\r\n        if(itemvalues)\r\n            return JSON.parse(itemvalues)\r\n        else\r\n            return []\r\n    }\r\n    const [state, setstate] = React.useState(\"\");\r\n    const [val,newValue]=React.useState(getdata);\r\n\r\n    const adding=()=>\r\n    {\r\n        if(!state)\r\n            alert(\"Please type some data\")\r\n        else{\r\n            const newitems={\r\n                id:new Date().getTime().toString(),\r\n                name:state\r\n            }\r\n            newValue([...val,newitems])\r\n            setstate(\"\")\r\n        }\r\n    }\r\n    const deleting =(id)=>\r\n    {\r\n        const updtaeditems=val.filter((curElem)=>{\r\n            return curElem.id!==id\r\n        })\r\n        newValue(updtaeditems)\r\n    }\r\n    const edit =(id)=>\r\n    {\r\n        const updtaeditem=val.filter((curElem)=>{\r\n            if(curElem.id===id)\r\n                setstate(curElem.name)\r\n            return curElem.id!==id\r\n        })\r\n        newValue(updtaeditem)\r\n\r\n    }\r\n    const remove=()=>\r\n    {\r\n        return newValue([])\r\n    }\r\n    React.useEffect(() => {\r\n        localStorage.setItem(\"mylist\",JSON.stringify(val))\r\n    }, [val])\r\n    return (\r\n        <>\r\n            <div className=\"center\">\r\n            <center>\r\n                <img src=\"./images/check-list.png\" height=\"50\" alt=\"logo\"widht=\"50\"></img>\r\n                <p className=\"para\">Add your list here😉</p>\r\n                <input type=\"text\" placeholder=\"✍ Type Here...\" className=\"box\" value={state} onChange={(event)=>setstate(event.target.value)}></input>\r\n                <input type=\"image\" src=\"./images/plus.png\" height=\"20\" widht=\"25\" className=\"image\" onClick={adding} alt=\"Add\"></input>\r\n                <br></br>\r\n                <div>\r\n                    {val.map((curElem)=>{\r\n                        return(\r\n                            <div key={curElem.id}>\r\n                            <h3 className=\"display\">{curElem.name}</h3> \r\n                            <input type=\"image\" src=\"./images/editing.png\" height=\"20\" widht=\"25\" className=\"image\" alt=\"edit\"onClick={()=>edit(curElem.id)}></input>\r\n                            <input type=\"image\" src=\"./images/delete.png\" height=\"20\" widht=\"25\" className=\"image\" alt=\"deletelogo\" onClick={()=>deleting(curElem.id)}></input>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                    \r\n                </div>\r\n                <button className=\"button\" data-sm-link-text=\"Remove All\" onClick={()=>remove()}>Remove All</button>\r\n            </center>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App2\r\n","import { func } from 'prop-types';\nimport React from 'react'\n// import App1 from './start'\nimport App2 from './start1'\n// import App3 from './Project 3/start2'\nconst  App =()=>\n{\n    return (\n        <div>\n            <App2 />\n        </div>\n    )\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}